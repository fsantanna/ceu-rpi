native do
    ##include "vfs.h"
end

output (char* path, char* mode)=>_FILE* OPEN;
output (_FILE* f)=>int CLOSE;
output (_FILE* f)=>int SIZE;
output (void* ptr, int size, int nmemb, _FILE* f)=>int READ;

// Default device
var _FILE[] f;
//finalize
    f = (call OPEN => ("/boot/rpi-boot.cfg", "r"));
finalize
with
    call CLOSE => f;
end

if f == null then
    await FOREVER;
end

var int flen = (call SIZE => f);
//char *buf = (char *)malloc(flen+1);
var char[255] buf;
buf[flen] = 0;
call READ => (buf, 1, flen, f);

#define GPFSEL1 ((uint*)0x20200004)
#define GPSET0  ((uint*)0x2020001C)
#define GPCLR0  ((uint*)0x20200028)
var uint ra;
ra = *GPFSEL1;
ra = ra & ~(7<<18);
ra = ra | 1<<18;
*GPFSEL1 = ra;

var char* orig = "multiboot";

loop do
    loop i in 9 do
        if buf[i] != orig[i] then
            await FOREVER;
        end
        *GPCLR0 = 1<<16;
        await 1s;
        *GPSET0 = 1<<16;
        await 1s;
    end
end

